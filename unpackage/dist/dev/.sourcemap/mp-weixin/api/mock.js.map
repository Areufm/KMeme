{"version":3,"file":"mock.js","sources":["api/mock.js"],"sourcesContent":["import Mock from 'mockjs'\nimport pageApi from './mockData/pageApi'\n\n// 只有在 H5 平台且处于开发模式时，才启用 Mock 服务\nif (process.env.UNI_PLATFORM === 'h5' && process.env.NODE_ENV === 'development') {\n    // Mock for getBanner (GET)\n    Mock.mock(/api\\/user\\/getBanner/, 'get', pageApi.getBanner)\n\n    // Mock for getHomeList (GET)\n    Mock.mock(/\\/api\\/user\\/getHomeList/, 'get', pageApi.getHomeList)\n\n    // Mock for getAlbumImages (POST)\n    // 假设 pageApi.flowList 返回的数据结构与 /album/images 接口期望的相同\n    Mock.mock(/\\/api\\/album\\/images/, 'post', (options) => {\n        const body = JSON.parse(options.body);\n        const albumId = body.albumId;\n        console.log(`[mock] Mocking /api/album/images for albumId: ${albumId}`);\n        // 假设 pageApi.flowList 能够根据 albumId 返回对应数据\n        return pageApi.flowList(albumId);\n    });\n\n    // Mock for login (POST)\n    Mock.mock(/\\/api\\/login/, 'post', {\n        code: 1,\n        msg: '登录成功',\n        data: {\n            token: Mock.Random.string('lower', 32), // 生成一个随机的32位 token\n            userId: Mock.Random.id(),\n            // 可以根据需要添加其他登录返回的用户信息\n        }\n    });\n\n    // Mock for getUserInfo (GET)\n    Mock.mock(/\\/api\\/getUserInfo/, 'get', {\n        code: 1,\n        msg: '获取用户信息成功',\n        data: {\n            avatarUrl: '/static/mock_avatar.jpg', // 模拟头像 URL\n            nickName: Mock.Random.cname(), // 模拟中文姓名\n            gender: Mock.Random.integer(0, 1), // 0:未知, 1:男, 2:女\n            city: Mock.Random.city(),\n            province: Mock.Random.province(),\n            country: Mock.Random.county(),\n            // 可以根据需要添加其他用户信息\n        }\n    });\n\n    // Mock for collectList (GET)\n    Mock.mock(/\\/api\\/collect\\/list/, 'get', {\n        code: 1,\n        msg: '获取收藏列表成功',\n        data: Mock.mock({\n            'list|5-10': [{ // 随机生成 5 到 10 条收藏记录\n                'id|+1': 1,\n                'title': '@ctitle(10, 20)', // 随机中文标题\n                'imageUrl': Mock.Random.image('200x150', '#FF6600', '#FFF', 'Mock Image'), // 模拟图片 URL\n                'createTime': '@datetime(\"yyyy-MM-dd HH:mm:ss\")' // 模拟创建时间\n            }]\n        }).list\n    });\n\n    console.log('[mock] H5 开发环境 mock 服务已启用，所有 API 已配置')\n} else {\n    console.log('[mock] 非 H5 开发环境，mock 服务未启用')\n}\n"],"names":["uni"],"mappings":";;AA8DO;AACHA,gBAAAA,MAAA,MAAA,OAAA,qBAAY,6BAA6B;AAC7C;"}